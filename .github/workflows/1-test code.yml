name: Test project

# define the events that should be triggered

# Events that triggers workflow you can find here
# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#push

# on: workflow_dispatch # trigger workflow manually
on:
    # [push, workflow_dispatch]
    push:
        branches:
            - main
            
    pull_request:
        branches:
            - main
    
jobs:
    test-job:
        runs-on: macos-latest
      
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
              # you can add some configuration or settings using 'with' keyword
              
            - name: List Simulators
              run: |
                # Run the command to list simulators and store the output in a variable
                simulators=$(xcrun simctl list devices)
          
                # Output the captured simulators information
                echo "SIMULATORS: $simulators"
          
                # Further processing (optional): Extract specific details from the output
                # For example, extracting iPhone 13 with iOS 15.0
                echo "SIMULATORS: $simulators" | grep -A 2 "iPhone 13 ("
              
            - name: Install xcpretty
              run: gem install xcpretty
              
            - name: List Contents
              run: ls -R
              
            - name: Install pods
              run: |
                sudo gem install cocoapods
                cd ./github-actions
                pod install
                
            - name: Force Xcode 15.0
              run: sudo xcode-select -switch /Applications/Xcode.app
 
            - name: Build XCode project
              run: |
                cd github-actions
                ls -la
                xcodebuild -workspace github-actions.xcworkspace \
                           -scheme github-actions \
                           -destination 'platform=iOS Simulator,OS=17.0,name=iPhone 15' \
                           build test | xcpretty
                           -upload-test-results

             
    predeploy-job:
        # before this job will run, we have to wait until test-job finished
        needs: test-job # can contain an array of multiple jobs to be finished [test-job1, test-job2, ect.]
        runs-on: macos-latest
        steps:
            - name: Build project
              run: echo "build project..."
              
              
              
              
              
          
              
