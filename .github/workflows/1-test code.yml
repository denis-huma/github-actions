name: Test project

# define the events that should be triggered

# Events that triggers workflow you can find here
# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#push

# on: workflow_dispatch # trigger workflow manually
on:
    # [push, workflow_dispatch]
#    push:
#        branches:
#            - main
            
    push:
        branches:
            - main
    
jobs:
    test-job:
        runs-on: macos-latest
      
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
              # you can add some configuration or settings using 'with' keyword
              
            - name: Install xcpretty
              run: gem install xcpretty
              
            - name: List Contents
              run: ls -R
              
            - name: Install pods
              run: |
                sudo gem install cocoapods
                cd ./github-actions
                pod install
                
            # - name: Force Xcode Last Version
            #   run: |
            #     sudo xcode-select -switch /Applications/Xcode.app
            #     # Run the command to list simulators and store the output in a variable
            #     # simulators=$(xcrun simctl list devices)
                                           
            # - name: List Simulators
            #   run: |
            #     cd ./github-actions
            #     ls -R
            #     # xcodebuild -showdestinations
                
            - name: Create iOS Simulator
              run: |
                xcrun simctl create "iPhone 12" com.apple.CoreSimulator.SimDeviceType.iPhone-12 com.apple.CoreSimulator.SimRuntime.iOS-15-0

            - name: Test XCode project
              run: |
                cd github-actions
                ls -la
                /Applications/Xcode_14.2.app/Contents/Developer/usr/bin/xcodebuild clean test -workspace github-actions.xcworkspace \
                           -scheme github-actions \
                           -destination 'platform=iOS Simulator,name=Any iOS Simulator Device' \
                 working-directory: github-actions

#    predeploy-job:
#        # before this job will run, we have to wait until test-job finished
#        needs: test-job # can contain an array of multiple jobs to be finished [test-job1, test-job2, ect.]
#        runs-on: macos-latest
#        steps:
#            - name: Build project
#              run: echo "build project..."
